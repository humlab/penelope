name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
# on:
#   create:
#     tags:
#     - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      #POETRY_VIRTUALENVS_CREATE: false
      NLTK_DATA: ~/nltk_data
    steps:

      - uses: actions/checkout@v2
      - name: Get the release tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: Gr1N/setup-poetry@v4

      - run: poetry install --no-interaction
      - run: poetry check
      - run: poetry debug
      - run: poetry run flake8 ./penelope
      - run: make nltk_data spacy_data
      - run: make test

      # - run: safety check --bare --file ./requirements.txt
      # - run: poetry run mypy
      # - run: poetry run make lint

      #        Removed since flake8-black is installes:
      # - run: poetry run black --line-length 120 --target-version py38 --skip-string-normalization --check ./penelope/

      - run: poetry build

      - name: Upload Release Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: dist/humlab_penelope-{{ steps.tag.outputs.tag }}-py3-none-any.whl
          path: releases/humlab_penelope-{{ steps.tag.outputs.tag }}-py3-none-any.whl

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}

      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: target/release/mything
      #     asset_name: mything
      #     tag: ${{ github.ref }}
      #     overwrite: true
      #     body: "This is my release text"

      # - name: Build Python package and publish to PyPI
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: poetry publish --build -u __token__ -p ${{ secrets.PYPI_TOKEN }}

  # release:
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs:
  #     - ci
  #   steps:
  #     - name: Get version from tag
  #       id: tag_name
  #       run: |
  #         echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
  #       shell: bash
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - uses: Gr1N/setup-poetry@v4
  #     - uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pypoetry/virtualenvs
  #         key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-poetry-
  #     - run: poetry --version
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheel
  #         path: dist/
  #     # - uses: actions/download-artifact@v2
  #     #   with:
  #     #     name: docs
  #     #     path: docs/build/html
  #     # - name: Get Changelog Entry
  #     #   id: changelog_reader
  #     #   uses: mindsers/changelog-reader-action@v1.1.0
  #     # - name: Publish the release
  #     #   uses: softprops/action-gh-release@v1
  #     #   env:
  #     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     #   with:
  #     #     body: ${{ steps.changelog_reader.outputs.log_entry }}
  #     #     files: |
  #     #       dist/*
  #     # - name: Publish the documentation
  #     #   uses: peaceiris/actions-gh-pages@v3
  #     #   with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./docs/build/html
  #     - name: publish the packages
  #       run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
